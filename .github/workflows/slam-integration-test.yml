name: SLAM Integration Test

on:
  workflow_dispatch:
  workflow_call:

jobs:
  test_orbslam_integration:
      name:  Test ORB_SLAM3 Integration
      runs-on: [x64, qemu-host]
      container:
        image: ghcr.io/viamrobotics/canon:amd64-cache
        options: --platform linux/amd64
      timeout-minutes: 30
      steps:
      - name: Check out main branch code
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check out PR branch code
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Get orbslam binary for integration tests
        run: |
          sudo curl -o /usr/local/bin/orb_grpc_server http://packages.viam.com/apps/slam-servers/orb_grpc_server-latest-x86_64.AppImage
          sudo chmod a+rx /usr/local/bin/orb_grpc_server

      - name: Run integration tests
        run: |
          sudo -u testbot bash -lc 'export APPIMAGE_EXTRACT_AND_RUN=1 && make test-integration'

  test_cartographer_integration:
      name:  Test Cartographer Integration
      runs-on: [x64, qemu-host]
      container:
        image: ghcr.io/viamrobotics/canon:amd64-cache
        options: --platform linux/amd64
      timeout-minutes: 30
      steps:
      - name: Check out main branch code
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check out PR branch code
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Get cartographer binary for integration tests
        run: |
          sudo curl -o /usr/local/bin/carto_grpc_server http://packages.viam.com/apps/slam-servers/carto_grpc_server-latest-x86_64.AppImage
          sudo chmod a+rx /usr/local/bin/carto_grpc_server

      - name: Run integration tests
        run: |
          sudo -u testbot bash -lc 'export APPIMAGE_EXTRACT_AND_RUN=1 && make test-integration'

