name: Test

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      ARTIFACT_GOOGLE_APPLICATION_CREDENTIALS:
        required: true
      TEST_MONGODB_URI:
        required: true
      REPO_READ_TOKEN:
        required: true
      GIT_ACCESS_TOKEN:
        required: true

jobs:
  build_and_test:
    name: Build and Test
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/viamrobotics/canon:amd64-cache
      options: --platform linux/amd64
    timeout-minutes: 30

    steps:

    - name: Check out code in rdk directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Verify no uncommitted changes from "make build lint"
      run: |
        sudo -u testbot bash -lc 'echo "machine github.com login viambot password ${{ secrets.REPO_READ_TOKEN }}" > ~/.netrc'

        git init
        git add .
        chown -R testbot .
        sudo -u testbot bash -lc 'make build lint'
        GEN_DIFF=$(git status -s)
        if [ -n "$GEN_DIFF" ]; then
            echo '"make build lint" resulted in changes not in git' 1>&2
            git status
            exit 1
        fi

    - name: Test
      env:
        ARTIFACT_GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ARTIFACT_GOOGLE_APPLICATION_CREDENTIALS }}
        TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
      run: |
        echo "$ARTIFACT_GOOGLE_APPLICATION_CREDENTIALS" | base64 -d > artifact_google_creds.json
        export ARTIFACT_GOOGLE_APPLICATION_CREDENTIALS=`pwd`/artifact_google_creds.json
        sudo -u testbot bash -lc 'make cover'
        sudo -u testbot bash -lc 'make test-web'

    - name: Code Coverage Summary Report
      uses: edaniels/CodeCoverageSummary@v1.2.3
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: true
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '50 70'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2.2.0
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
        GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}

  test_pi:
    name: Test Raspberry Pi Code
    runs-on: pi4
    timeout-minutes: 5

    steps:
    - name: Check out code in rdk directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Clean
      run: make clean-all

    - name: Test
      run: make test-pi
