name: Test

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      REPO_READ_TOKEN:
        required: true
      GIT_ACCESS_TOKEN:
        required: true

env:
  GOPRIVATE: "github.com/viamrobotics/*,go.viam.com/*"

jobs:
  build_and_test:
    name: Build and Test
    strategy:
      matrix:
        include:
          - arch: [x64, qemu-host]
            image: ghcr.io/viamrobotics/canon:amd64-cache
            platform: linux/amd64
            build_lint: 'make build lint'
          - arch: [arm64, qemu-host]
            image: ghcr.io/viamrobotics/canon:arm64-cache
            platform: linux/arm64
            build_lint: 'make build-go lint-go'
    runs-on: ${{ matrix.arch }}
    container:
      image: ${{ matrix.image }}
      options: --platform ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
    - name: Check out code in rdk directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Configure git for private repos
      run: |
        sudo -u testbot bash -lc 'echo "machine github.com login viambot password ${{ secrets.REPO_READ_TOKEN }}" > ~/.netrc'

    - name: Verify no uncommitted changes from "${{ matrix.build_lint }}"
      run: |
        git init
        git add .
        chown -R testbot .
        sudo -u testbot bash -lc '${{ matrix.build_lint }}'

        NOW=$(date "+%s")
        CUTOFF_DATE=$(date -d"2022/07/25 00:00:00" "+%s")
        if [ $NOW -gt $CUTOFF_DATE]; then
          echo "stop ignoring web/runtime-shared/static/control.js"
          exit 1
        fi

        GEN_DIFF=$(git status -s | grep -v web/runtime-shared/static/control.js)
        if [ -n "$GEN_DIFF" ]; then
            echo '"make build lint" resulted in changes not in git' 1>&2
            git status
            exit 1
        fi

    - name: Test
      if: matrix.platform == 'linux/amd64'
      run: |
        sudo -u testbot bash -lc 'make cover test-web'

    - name: Code Coverage Summary Report
      if: matrix.platform == 'linux/amd64'
      uses: edaniels/CodeCoverageSummary@v1.2.3
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: true
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '50 70'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2.2.0
      if: matrix.platform == 'linux/amd64' && github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
        GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}

  test_pi:
    name: Test Raspberry Pi Code
    runs-on: pi4
    timeout-minutes: 5

    steps:
    - name: Clean Workspace
      run: |
        shopt -s dotglob
        sudo chown -R `whoami` ./
        rm -rf ./*

    - name: Check out code in rdk directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Clean
      run: make clean-all

    - name: Test
      run: make test-pi

  test_passing:
    name: All Tests Passing
    needs: [test_pi, build_and_test]
    runs-on: [x64, qemu-host]
    steps:
      - name: Pass
        run: |
          true
