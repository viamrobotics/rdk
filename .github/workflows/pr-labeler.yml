name: PR Test Label Manager

on:
  pull_request_target:
    branches: [ 'workflow-labels' ]
    types: [ opened, synchronize, reopened ]

jobs:
  pr_test_label_manager:
    name: PR Test Label Manager
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request_target' &&
      contains(fromJson('["opened", "synchronize", "reopened"]'), github.event.action)
    steps:
      - name: "Check Membership and Label PR"
        uses: actions/github-script@v6
        id: check-membership
        with:
          github-token: ${{ secrets.PR_TOKEN }}
          script: |
            let prNumber = context.payload.pull_request && context.payload.pull_request.number;
            let isMember = false;

            let orgResp = await github.rest.orgs.checkMembershipForUser({
              org: "viamrobotics",
              username: context.payload.sender.login
            });

            if (orgResp.status === 204) {
              isMember = true;
            }

            if (isMember) {
              await github.rest.issues.addLabels({
                owner: "viamrobotics",
                repo: "rdk",
                issue_number: prNumber,
                labels: ["viam-org"]
              });
              await new Promise((r) => setTimeout(r, 2000));
              await github.rest.issues.addLabels({
                owner: "viamrobotics",
                repo: "rdk",
                issue_number: prNumber,
                labels: ["safe to test"]
              });
            } else {
              await github.rest.issues.removeLabel({
                owner: "viamrobotics",
                repo: "rdk",
                issue_number: prNumber,
                name: "safe to test"
              });
            }
            return isMember;

      - name: Add Unsafe PR Comment
        if: steps.check-membership.outputs.result != true
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          message: For security reasons, this PR must be labeled with `safe to test` in order for tests to run.

      - name: "Echo output"
        run: echo ${{ steps.labeler.outputs.is_member }}
