name: Build AppImage

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      GCP_CREDENTIALS:
        required: true

env:
  GOPRIVATE: "github.com/viamrobotics/*,go.viam.com/*"

jobs:
  appimage:
    name: AppImage Build
    strategy:
      matrix:
        include:
          - arch: [x64, qemu-host]
            image: ghcr.io/viamrobotics/canon:amd64-cache
            platform: linux/amd64
          - arch: [arm64, qemu-host]
            image: ghcr.io/viamrobotics/canon:arm64-cache
            platform: linux/arm64
    runs-on: ${{ matrix.arch }}
    container:
      image: ${{ matrix.image }}
      options: --platform ${{ matrix.platform }}
    timeout-minutes: 15
    outputs:
      date: ${{ steps.build_test_app.outputs.date }}

    steps:
    - name: Check out main branch code
      if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Check out PR branch code
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 2

    - name: Clean
      run: |
        make clean-all

    - name: Authorize GCP Upload
      uses: google-github-actions/auth@v0.4.3
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Build and Package (PR)
      if: contains(github.event.pull_request.labels.*.name, 'appimage')
      run: |
        make BUILD_CHANNEL="pr-${{ github.event.pull_request.number }}" appimage

    - name: Upload Files (PR)
      if: contains(github.event.pull_request.labels.*.name, 'appimage')
      uses: google-github-actions/upload-cloud-storage@v0.5.0
      with:
        headers: "Cache-Control: no-cache"
        path: 'etc/packaging/appimages/deploy/'
        destination: 'packages.viam.com/apps/viam-server/'
        glob: '*'
        parent: false
        gzip: false

    - name: Build and Package (Latest)
      id: build_test_app
      if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
      run: |
        echo "::set-output name=date::`date +%F`"
        make BUILD_CHANNEL="latest" appimage

    - name: Upload Files (Testing)
      if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
      uses: google-github-actions/upload-cloud-storage@v0.5.0
      with:
        headers: "Cache-Control: no-cache"
        path: 'etc/packaging/appimages/deploy/'
        destination: 'packages.viam.com/apps/viam-server/testing/${{ steps.build_test_app.outputs.date }}/${{ github.sha }}/'
        glob: '*'
        parent: false
        gzip: false

  appimage_test:
    name: AppImage Test
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    strategy:
      matrix:
        arch: [[x64, qemu-host], [arm64, qemu-host]]
    needs: appimage
    runs-on: ${{ matrix.arch }}
    timeout-minutes: 15
    outputs:
      date: ${{ needs.appimage.outputs.date }}

    steps:
    - name: Clean Workspace
      run: |
        shopt -s dotglob
        sudo chown -R `whoami` ./
        rm -rf ./*

    - name: Test AppImage
      run: |
        export TEST_DIR=`mktemp -d -t test-viam-server-XXXXXX`
        cd $TEST_DIR

        curl -o viam-server http://packages.viam.com/apps/viam-server/testing/${{ needs.appimage.outputs.date }}/${{ github.sha }}/viam-server-latest-`uname -m`.AppImage
        chmod 755 viam-server

        export RAND_PORT=$((30000 + $RANDOM))
        echo "{\"network\": {\"bind_address\":\"localhost:${RAND_PORT}\"}}" > test.json

        ./viam-server -config test.json &
        curl --retry 5 --retry-delay 5 --retry-connrefused localhost:$RAND_PORT
        export RET1=$?
        kill %%
        wait $!
        export RET2=$?
        cd - && rm -rf $TEST_DIR
        [ $RET1 == 0 ] && [ $RET1 == 0 ]

  appimage_deploy:
    name: AppImage Deploy
    needs: appimage_test
    runs-on: [x64, qemu-host]
    container:
      image: ghcr.io/viamrobotics/canon:amd64-cache
      options: --platform linux/amd64
    timeout-minutes: 5

    steps:
    - name: Authorize GCP
      uses: google-github-actions/auth@v0.4.3
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: Publish AppImage
      run: |
        gsutil mv "gs://packages.viam.com/apps/viam-server/testing/${{ needs.appimage_test.outputs.date }}/${{ github.sha }}/*" "gs://packages.viam.com/apps/viam-server/"
