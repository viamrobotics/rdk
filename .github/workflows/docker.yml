name: Docker

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

on:
  # schedule:
  #   - cron: '0 6 * * *' # once a day at 6AM UTC (1AM/EST, 2AM/EDT)
  workflow_dispatch:

# To test workflow updates you need to work in a branch directly on viamrobotics/rdk
# and tag your working branch instead of @main in any viamrobotics/rdk "uses" below.
# Don't forget to tag back to @main before merge.

jobs:
  canon-cache:
    name: Build Canon Cache Docker Images
    strategy:
      matrix:
        include:
        - arch: ubuntu-latest
          tag: amd64-beta-81a6398
          platform: linux/amd64
        - arch: buildjet-2vcpu-ubuntu-2204-arm
          tag: arm64-beta-81a6398
          platform: linux/arm64
        - arch: buildjet-2vcpu-ubuntu-2204-arm
          tag: armhf-beta-81a6398
          platform: linux/arm/v7
    runs-on: ${{ matrix.arch }}
    timeout-minutes: 30
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/setup-buildx-action@v2
    - name: Check out code
      uses: actions/checkout@v3
    - uses: docker/build-push-action@v5
      with:
        # push: true
        pull: true
        tags: 'ghcr.io/viamrobotics/rdk-devenv:${{ matrix.tag }}-cache'
        platform: ${{ matrix.platform }}
        build-args: MAIN_TAG=ghcr.io/viamrobotics/rdk-devenv,BASE_TAG=${{ matrix.tag }}
        file: etc/Dockerfile.cache
    # - name: Build and Push
    #   env: ${{ matrix.env }}
    #   run: |
    #     echo platform $PLATFORM arm_tag $ARM_TAG
    #     make ${{ matrix.make_target}}

  # test:
  #   needs: canon-cache
  #   uses: viamrobotics/rdk/.github/workflows/test.yml@main
  #   secrets:
  #     MONGODB_TEST_OUTPUT_URI: ${{ secrets.MONGODB_TEST_OUTPUT_URI }}

  antique-cache:
    name: Build Antique Cache Docker Images
    strategy:
      matrix:
        include:
        - arch: [ubuntu-latest]
          env:
            PLATFORM: linux/amd64
          make_target: 'antique-cache-amd64-ci'
        - arch: [buildjet-2vcpu-ubuntu-2204-arm]
          env:
            PLATFORM: linux/arm64
          make_target: 'antique-cache-arm64-ci'
        - arch: [buildjet-2vcpu-ubuntu-2204-arm]
          env:
            PLATFORM: linux/arm/v7
            ARM_TAG: armhf-beta-81a6398
          make_target: 'antique-cache-arm64-ci'
    runs-on: ${{ matrix.arch }}
    timeout-minutes: 30
    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Check out code
      uses: actions/checkout@v3
    - uses: docker/setup-buildx-action@v2
    - name: Build and Push
      env: ${{ matrix.env }}
      run: |
        make ${{ matrix.make_target}}
