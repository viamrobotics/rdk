// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type TransposeConvOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsTransposeConvOptions(buf []byte, offset flatbuffers.UOffsetT) *TransposeConvOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &TransposeConvOptions{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsTransposeConvOptions(buf []byte, offset flatbuffers.UOffsetT) *TransposeConvOptions {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &TransposeConvOptions{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *TransposeConvOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *TransposeConvOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *TransposeConvOptions) Padding() Padding {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return Padding(rcv._tab.GetInt8(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *TransposeConvOptions) MutatePadding(n Padding) bool {
	return rcv._tab.MutateInt8Slot(4, int8(n))
}

func (rcv *TransposeConvOptions) StrideW() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TransposeConvOptions) MutateStrideW(n int32) bool {
	return rcv._tab.MutateInt32Slot(6, n)
}

func (rcv *TransposeConvOptions) StrideH() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TransposeConvOptions) MutateStrideH(n int32) bool {
	return rcv._tab.MutateInt32Slot(8, n)
}

func TransposeConvOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func TransposeConvOptionsAddPadding(builder *flatbuffers.Builder, padding Padding) {
	builder.PrependInt8Slot(0, int8(padding), 0)
}
func TransposeConvOptionsAddStrideW(builder *flatbuffers.Builder, strideW int32) {
	builder.PrependInt32Slot(1, strideW, 0)
}
func TransposeConvOptionsAddStrideH(builder *flatbuffers.Builder, strideH int32) {
	builder.PrependInt32Slot(2, strideH, 0)
}
func TransposeConvOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
