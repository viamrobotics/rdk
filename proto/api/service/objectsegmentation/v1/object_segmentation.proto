syntax = "proto3";
option go_package = "go.viam.com/rdk/proto/api/service/objectsegmentation/v1";
option java_package = "com.viam.rdk.proto.api.service.objectsegmentation.v1";

package proto.api.service.objectsegmentation.v1;

import "google/api/annotations.proto";
import "proto/api/common/v1/common.proto";

// A ObjectSegmentationService declares the gRPC contract for an object segmentation service
service ObjectSegmentationService {

  // GetObjectPointClouds returns all the found objects in a pointcloud from a camera of the underlying robot,
  // as well as the 3-vector center of each of the found objects.
  // A specific MIME type can be requested but may not necessarily be the same one returned.
  rpc GetObjectPointClouds(GetObjectPointCloudsRequest) returns (GetObjectPointCloudsResponse) {
    option (google.api.http) = {
      get: "/api/v1/service/object_segmentation/object_point_clouds"
    };
  }
}

message GetObjectPointCloudsRequest {
  // Name of a camera
  string name = 1;
  // Requested MIME type of response
  string mime_type = 2;
  // Minimum points in plane
  int64 min_points_in_plane = 3;
  // Minimum points in segment
  int64 min_points_in_segment = 4;
  // Clustering radius in mm
  double clustering_radius_mm = 5;
}

message GetObjectPointCloudsResponse {
  // Actual MIME type of response
  string mime_type = 1;
  // List of objects in the scene
  repeated common.v1.PointCloudObject objects = 2;
}
