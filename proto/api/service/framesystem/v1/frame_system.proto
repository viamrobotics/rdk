syntax = "proto3";
option go_package = "go.viam.com/rdk/proto/api/service/framesystem/v1";
option java_package = "com.viam.rdk.proto.api.service.framesystem.v1";

package proto.api.service.framesystem.v1;

import "google/api/annotations.proto";
import "proto/api/common/v1/common.proto";

// A FrameSystemService declares the gRPC contract for a framesystem service
service FrameSystemService {
  rpc Config(ConfigRequest) returns (ConfigResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/service/frame_system/config"
    };
  }

  rpc TransformPose(TransformPoseRequest) returns (TransformPoseResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/service/frame_system/transform_pose"
    };
  }
}

message Config {
  string name = 1;
  common.v1.PoseInFrame pose_in_parent_frame = 2;
  bytes model_json = 3; 
}

message ConfigRequest {
  // pose information on any additional reference frames that are needed
  // to supplement the robot's frame system
  repeated common.v1.Transform supplemental_transforms = 1;
}

message ConfigResponse {
  repeated Config frame_system_configs = 1;
}

message TransformPoseRequest {
  // the original pose to transform along with the reference frame in
  // which it was observed
  common.v1.PoseInFrame source = 1;
  // the reference frame into which the source pose should be transformed,
  // if unset this defaults to the "world" reference frame
  string destination = 2;
  // pose information on any additional reference frames that are needed
  // to perform the transform
  repeated common.v1.Transform supplemental_transforms = 3;
}

message TransformPoseResponse {
  common.v1.PoseInFrame pose = 1;
}
