syntax = "proto3";

package proto.api.component.arm.v1;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "proto/api/common/v1/common.proto";

option go_package = "go.viam.com/rdk/proto/api/component/arm/v1";
option java_package = "com.viam.rdk.proto.api.component.arm.v1";

// An ArmService services all arms associated with a robot
service ArmService {
  // GetEndPosition gets the current position the end of the robot's arm expressed as X,Y,Z,ox,oy,oz,theta
  rpc GetEndPosition(GetEndPositionRequest) returns (GetEndPositionResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/component/arm/{name}/position"
    };
  }

  // MoveToPosition moves the mount point of the robot's end effector to the requested position.
  // This will block until done or a new operation cancels this one
  rpc MoveToPosition(MoveToPositionRequest) returns (MoveToPositionResponse) {
    option (google.api.http) = {
      put: "/viam/api/v1/component/arm/{name}/position"
    };
  }

  // GetJointPositions lists the joint positions (in degrees) of every joint on a robot
  rpc GetJointPositions(GetJointPositionsRequest) returns (GetJointPositionsResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/component/arm/{name}/joint_positions"
    };
  }

  // MoveToJointPositions moves every joint on a robot's arm to specified angles which are expressed in degrees
  // This will block until done or a new operation cancels this one
  rpc MoveToJointPositions(MoveToJointPositionsRequest) returns (MoveToJointPositionsResponse) {
    option (google.api.http) = {
      put: "/viam/api/v1/component/arm/{name}/joint_positions"
    };
  }

  // Stop stops a robot's arm
  rpc Stop(StopRequest) returns (StopResponse) {
    option (google.api.http) = {
      post: "/viam/api/v1/component/arm/{name}/stop"
    };
  }
}

message GetEndPositionRequest {
  // Name of an arm
  string name = 1;
  // Additional arguments to the method
  google.protobuf.Struct extra = 99;
}

message GetEndPositionResponse {
  // Returns 6d pose of the end effector relative to the base, represented by X,Y,Z coordinates which express
  // millimeters and theta, ox, oy, oz coordinates which express an orientation vector
  common.v1.Pose pose = 1;
}

message JointPositions {
  // A list of joint positions. Rotations values are in degrees, translational values in mm.
  // The numbers are ordered spatially from the base toward the end effector
  // This is used in GetJointPositionsResponse and MoveToJointPositionsRequest
  repeated double values = 1;
}

message GetJointPositionsRequest {
  // Name of an arm
  string name = 1;
  // Additional arguments to the method
  google.protobuf.Struct extra = 99;
}

message GetJointPositionsResponse {
  //a list JointPositions
  JointPositions positions = 1;
}

message MoveToPositionRequest {
  // Name of an arm
  string name = 1;
  common.v1.Pose to = 2;
  optional common.v1.WorldState world_state = 3;
  // Additional arguments to the method
  google.protobuf.Struct extra = 99;
}

message MoveToPositionResponse {}

message MoveToJointPositionsRequest {
  // Name of an arm
  string name = 1;
  // A list of joint positions
  // There should be 1 entry in the list per joint DOF, ordered spatially from the base toward the end effector
  JointPositions positions = 2;
  // Additional arguments to the method
  google.protobuf.Struct extra = 99;
}

message MoveToJointPositionsResponse {}

message StopRequest {
  // Name of an arm
  string name = 1;
  // Additional arguments to the method
  google.protobuf.Struct extra = 99;
}

message StopResponse {}

message Status {
  common.v1.Pose end_position = 1;
  JointPositions joint_positions = 2;
  bool is_moving = 3;
}
