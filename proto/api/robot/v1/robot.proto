syntax = "proto3";
option go_package = "go.viam.com/rdk/proto/api/robot/v1";
option java_package = "com.viam.rdk.proto.api.robot.v1";

package proto.api.robot.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "proto/api/common/v1/common.proto";

// A RobotService encompasses all functionality of some robot comprised of parts, local and remote.
service RobotService {
  rpc GetOperations(GetOperationsRequest) returns (GetOperationsResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/operations/list"
    };    
  }

  // ResourceNames returns the list of all resources.
  rpc ResourceNames(ResourceNamesRequest) returns (ResourceNamesResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/resources/list"
    };
  }

  rpc CancelOperation(CancelOperationRequest) returns (CancelOperationResponse) {
    option (google.api.http) = {
      post: "/viam/api/v1/operations/cancel"
    };    
  }
  
  rpc BlockForOperation(BlockForOperationRequest) returns (BlockForOperationResponse) {
    option (google.api.http) = {
      post: "/viam/api/v1/operations/block"
    };    
  }

  rpc FrameSystemConfig(FrameSystemConfigRequest) returns (FrameSystemConfigResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/frame_system/config"
    };
  }

  rpc TransformPose(TransformPoseRequest) returns (TransformPoseResponse) {
    option (google.api.http) = {
      get: "/viam/api/v1/frame_system/transform_pose"
    };
  }
}

message FrameSystemConfig {
  string name = 1;
  common.v1.PoseInFrame pose_in_parent_frame = 2;
  bytes model_json = 3; 
}

message FrameSystemConfigRequest {
  // pose information on any additional reference frames that are needed
  // to supplement the robot's frame system
  repeated common.v1.Transform supplemental_transforms = 1;
}

message FrameSystemConfigResponse {
  repeated FrameSystemConfig frame_system_configs = 1;
}

message TransformPoseRequest {
  // the original pose to transform along with the reference frame in
  // which it was observed
  common.v1.PoseInFrame source = 1;
  // the reference frame into which the source pose should be transformed,
  // if unset this defaults to the "world" reference frame
  string destination = 2;
  // pose information on any additional reference frames that are needed
  // to perform the transform
  repeated common.v1.Transform supplemental_transforms = 3;
}

message TransformPoseResponse {
  common.v1.PoseInFrame pose = 1;
}

message ResourceNamesRequest {}

message ResourceNamesResponse {
  repeated common.v1.ResourceName resources = 1;
}

message Operation {
  string id = 1;
  string method = 2;
  google.protobuf.Struct arguments = 3;
  google.protobuf.Timestamp started = 4;
};

message GetOperationsRequest { }

message GetOperationsResponse {
  repeated Operation operations = 1;
}

message CancelOperationRequest {
  string id = 1;
}

message CancelOperationResponse {}

message BlockForOperationRequest {
    string id = 1;
}

message BlockForOperationResponse {}
