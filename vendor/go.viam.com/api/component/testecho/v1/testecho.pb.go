// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: component/testecho/v1/testecho.proto

package v1

import (
	_ "go.viam.com/api/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_component_testecho_v1_testecho_proto_rawDescGZIP(), []int{0}
}

func (x *EchoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EchoRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_component_testecho_v1_testecho_proto_rawDescGZIP(), []int{1}
}

func (x *EchoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoMultipleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoMultipleRequest) Reset() {
	*x = EchoMultipleRequest{}
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoMultipleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoMultipleRequest) ProtoMessage() {}

func (x *EchoMultipleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoMultipleRequest.ProtoReflect.Descriptor instead.
func (*EchoMultipleRequest) Descriptor() ([]byte, []int) {
	return file_component_testecho_v1_testecho_proto_rawDescGZIP(), []int{2}
}

func (x *EchoMultipleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EchoMultipleRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoMultipleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoMultipleResponse) Reset() {
	*x = EchoMultipleResponse{}
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoMultipleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoMultipleResponse) ProtoMessage() {}

func (x *EchoMultipleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoMultipleResponse.ProtoReflect.Descriptor instead.
func (*EchoMultipleResponse) Descriptor() ([]byte, []int) {
	return file_component_testecho_v1_testecho_proto_rawDescGZIP(), []int{3}
}

func (x *EchoMultipleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoBiDiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoBiDiRequest) Reset() {
	*x = EchoBiDiRequest{}
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoBiDiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoBiDiRequest) ProtoMessage() {}

func (x *EchoBiDiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoBiDiRequest.ProtoReflect.Descriptor instead.
func (*EchoBiDiRequest) Descriptor() ([]byte, []int) {
	return file_component_testecho_v1_testecho_proto_rawDescGZIP(), []int{4}
}

func (x *EchoBiDiRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EchoBiDiRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoBiDiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EchoBiDiResponse) Reset() {
	*x = EchoBiDiResponse{}
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoBiDiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoBiDiResponse) ProtoMessage() {}

func (x *EchoBiDiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoBiDiResponse.ProtoReflect.Descriptor instead.
func (*EchoBiDiResponse) Descriptor() ([]byte, []int) {
	return file_component_testecho_v1_testecho_proto_rawDescGZIP(), []int{5}
}

func (x *EchoBiDiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_component_testecho_v1_testecho_proto_rawDescGZIP(), []int{6}
}

func (x *StopRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_component_testecho_v1_testecho_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_component_testecho_v1_testecho_proto_rawDescGZIP(), []int{7}
}

var File_component_testecho_v1_testecho_proto protoreflect.FileDescriptor

var file_component_testecho_v1_testecho_proto_rawDesc = []byte{
	0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74,
	0x65, 0x63, 0x68, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x65, 0x63, 0x68, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e,
	0x76, 0x31, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0b, 0x45, 0x63,
	0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x45, 0x63, 0x68, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x43, 0x0a, 0x13, 0x45, 0x63, 0x68, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x45, 0x63, 0x68, 0x6f, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x45, 0x63, 0x68, 0x6f,
	0x42, 0x69, 0x44, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x45, 0x63, 0x68,
	0x6f, 0x42, 0x69, 0x44, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb3, 0x03, 0x0a, 0x0f, 0x54,
	0x65, 0x73, 0x74, 0x45, 0x63, 0x68, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b,
	0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x27, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x63, 0x68, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x68,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0c, 0x45,
	0x63, 0x68, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x76,
	0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04,
	0xa0, 0x92, 0x29, 0x01, 0x30, 0x01, 0x12, 0x6b, 0x0a, 0x08, 0x45, 0x63, 0x68, 0x6f, 0x42, 0x69,
	0x44, 0x69, 0x12, 0x2b, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x63, 0x68, 0x6f, 0x42, 0x69, 0x44, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x68,
	0x6f, 0x42, 0x69, 0x44, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x27, 0x2e, 0x76, 0x69,
	0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x47, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x65, 0x63, 0x68, 0x6f, 0x2e,
	0x76, 0x31, 0x5a, 0x25, 0x67, 0x6f, 0x2e, 0x76, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x65, 0x63, 0x68, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_component_testecho_v1_testecho_proto_rawDescOnce sync.Once
	file_component_testecho_v1_testecho_proto_rawDescData = file_component_testecho_v1_testecho_proto_rawDesc
)

func file_component_testecho_v1_testecho_proto_rawDescGZIP() []byte {
	file_component_testecho_v1_testecho_proto_rawDescOnce.Do(func() {
		file_component_testecho_v1_testecho_proto_rawDescData = protoimpl.X.CompressGZIP(file_component_testecho_v1_testecho_proto_rawDescData)
	})
	return file_component_testecho_v1_testecho_proto_rawDescData
}

var file_component_testecho_v1_testecho_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_component_testecho_v1_testecho_proto_goTypes = []any{
	(*EchoRequest)(nil),          // 0: viam.component.testecho.v1.EchoRequest
	(*EchoResponse)(nil),         // 1: viam.component.testecho.v1.EchoResponse
	(*EchoMultipleRequest)(nil),  // 2: viam.component.testecho.v1.EchoMultipleRequest
	(*EchoMultipleResponse)(nil), // 3: viam.component.testecho.v1.EchoMultipleResponse
	(*EchoBiDiRequest)(nil),      // 4: viam.component.testecho.v1.EchoBiDiRequest
	(*EchoBiDiResponse)(nil),     // 5: viam.component.testecho.v1.EchoBiDiResponse
	(*StopRequest)(nil),          // 6: viam.component.testecho.v1.StopRequest
	(*StopResponse)(nil),         // 7: viam.component.testecho.v1.StopResponse
}
var file_component_testecho_v1_testecho_proto_depIdxs = []int32{
	0, // 0: viam.component.testecho.v1.TestEchoService.Echo:input_type -> viam.component.testecho.v1.EchoRequest
	2, // 1: viam.component.testecho.v1.TestEchoService.EchoMultiple:input_type -> viam.component.testecho.v1.EchoMultipleRequest
	4, // 2: viam.component.testecho.v1.TestEchoService.EchoBiDi:input_type -> viam.component.testecho.v1.EchoBiDiRequest
	6, // 3: viam.component.testecho.v1.TestEchoService.Stop:input_type -> viam.component.testecho.v1.StopRequest
	1, // 4: viam.component.testecho.v1.TestEchoService.Echo:output_type -> viam.component.testecho.v1.EchoResponse
	3, // 5: viam.component.testecho.v1.TestEchoService.EchoMultiple:output_type -> viam.component.testecho.v1.EchoMultipleResponse
	5, // 6: viam.component.testecho.v1.TestEchoService.EchoBiDi:output_type -> viam.component.testecho.v1.EchoBiDiResponse
	7, // 7: viam.component.testecho.v1.TestEchoService.Stop:output_type -> viam.component.testecho.v1.StopResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_component_testecho_v1_testecho_proto_init() }
func file_component_testecho_v1_testecho_proto_init() {
	if File_component_testecho_v1_testecho_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_component_testecho_v1_testecho_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_component_testecho_v1_testecho_proto_goTypes,
		DependencyIndexes: file_component_testecho_v1_testecho_proto_depIdxs,
		MessageInfos:      file_component_testecho_v1_testecho_proto_msgTypes,
	}.Build()
	File_component_testecho_v1_testecho_proto = out.File
	file_component_testecho_v1_testecho_proto_rawDesc = nil
	file_component_testecho_v1_testecho_proto_goTypes = nil
	file_component_testecho_v1_testecho_proto_depIdxs = nil
}
