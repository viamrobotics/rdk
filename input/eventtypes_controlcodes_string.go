// Code generated by "stringer -output=eventtypes_controlcodes_string.go -type=EventType,ControlCode"; DO NOT EDIT.

package input

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AllEvents-0]
	_ = x[Connect-1]
	_ = x[Disconnect-2]
	_ = x[ButtonDown-3]
	_ = x[ButtonUp-4]
	_ = x[ButtonChange-5]
	_ = x[PositionChangeAbs-6]
	_ = x[PositionChangeRel-7]
}

const _EventType_name = "AllEventsConnectDisconnectButtonDownButtonUpButtonChangePositionChangeAbsPositionChangeRel"

var _EventType_index = [...]uint8{0, 9, 16, 26, 36, 44, 56, 73, 90}

func (i EventType) String() string {
	if i >= EventType(len(_EventType_index)-1) {
		return "EventType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EventType_name[_EventType_index[i]:_EventType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AbsoluteX-1000]
	_ = x[AbsoluteY-1001]
	_ = x[AbsoluteZ-1002]
	_ = x[AbsoluteRX-1003]
	_ = x[AbsoluteRY-1004]
	_ = x[AbsoluteRZ-1005]
	_ = x[AbsoluteHat0X-1006]
	_ = x[AbsoluteHat0Y-1007]
	_ = x[ButtonSouth-2000]
	_ = x[ButtonEast-2001]
	_ = x[ButtonWest-2002]
	_ = x[ButtonNorth-2003]
	_ = x[ButtonLT-2004]
	_ = x[ButtonRT-2005]
	_ = x[ButtonLThumb-2006]
	_ = x[ButtonRThumb-2007]
	_ = x[ButtonSelect-2008]
	_ = x[ButtonStart-2009]
	_ = x[ButtonMenu-2010]
	_ = x[ButtonRecord-2011]
}

const (
	_ControlCode_name_0 = "AbsoluteXAbsoluteYAbsoluteZAbsoluteRXAbsoluteRYAbsoluteRZAbsoluteHat0XAbsoluteHat0Y"
	_ControlCode_name_1 = "ButtonSouthButtonEastButtonWestButtonNorthButtonLTButtonRTButtonLThumbButtonRThumbButtonSelectButtonStartButtonMenuButtonRecord"
)

var (
	_ControlCode_index_0 = [...]uint8{0, 9, 18, 27, 37, 47, 57, 70, 83}
	_ControlCode_index_1 = [...]uint8{0, 11, 21, 31, 42, 50, 58, 70, 82, 94, 105, 115, 127}
)

func (i ControlCode) String() string {
	switch {
	case 1000 <= i && i <= 1007:
		i -= 1000
		return _ControlCode_name_0[_ControlCode_index_0[i]:_ControlCode_index_0[i+1]]
	case 2000 <= i && i <= 2011:
		i -= 2000
		return _ControlCode_name_1[_ControlCode_index_1[i]:_ControlCode_index_1[i+1]]
	default:
		return "ControlCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
