window.BaseControlHelper={moveStraight:function(e,o,t,n){const i=new baseApi.MoveStraightRequest;i.setName(e),i.setMmPerSec(t),i.setDistanceMm(o),rcLogConditionally(i),baseService.moveStraight(i,{},n)},spin:function(e,o,t,n){const i=new baseApi.SpinRequest;i.setName(e),i.setAngleDeg(o),i.setDegsPerSec(t),rcLogConditionally(i),baseService.spin(i,{},n)},setPower:function(e,o,t,n){const i=new baseApi.SetPowerRequest;i.setName(e),i.setLinear(o),i.setAngular(t),rcLogConditionally(i),baseService.setPower(i,{},n)},setVelocity:function(e,o,t,n){const i=new baseApi.SetVelocityRequest;i.setName(e),i.setLinear(o),i.setAngular(t),rcLogConditionally(i),baseService.setVelocity(i,{},n)}},window.computeKeyboardBaseControls=function(e){let o=0,t=0;return e.forward?o=1:e.backward&&(o=-1),e.right?t=-1:e.left&&(t=1),{linear:o,angular:t}},window.MotorControlHelper={setPower:function(e,o,t){const n=new motorApi.SetPowerRequest;n.setName(e),n.setPowerPct(o),rcLogConditionally(n),motorService.setPower(n,{},t)},goFor:function(e,o,t,n){const i=new motorApi.GoForRequest;i.setName(e),i.setRpm(o),i.setRevolutions(t),rcLogConditionally(i),motorService.goFor(i,{},n)},goTo:function(e,o,t,n){const i=new motorApi.GoToRequest;i.setName(e),i.setRpm(o),i.setPositionRevolutions(t),rcLogConditionally(i),motorService.goTo(i,{},n)},stop:function(e,o){const t=new motorApi.StopRequest;t.setName(e),rcLogConditionally(t),motorService.stop(t,{},o)}},window.BoardControlHelper={getGPIO:function(e,o,t){const n=new boardApi.GetGPIORequest;n.setName(e),n.setPin(o),rcLogConditionally(n),boardService.getGPIO(n,{},t)},setGPIO:function(e,o,t,n){const i=new boardApi.SetGPIORequest;i.setName(e),i.setPin(o),i.setHigh(t),rcLogConditionally(i),boardService.setGPIO(i,{},n)}},window.ServoControlHelper={stop:function(e,o){const t=new servoApi.StopRequest;t.setName(e),rcLogConditionally(t),servoService.stop(t,{},o)}};
//# sourceMappingURL=control_helpers.js.map